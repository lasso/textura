<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Textura">
  <file path="src/textura/plugins/FormBuilder/classes/ValidationRuleMatchesRegexp.php" hash="9ee330d3d18ad5442aa3f4a4418b6093" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends>\Textura\ValidationRule</extends>
      <name>ValidationRuleMatchesRegexp</name>
      <full_name>\Textura\ValidationRuleMatchesRegexp</full_name>
      <docblock line="29">
        <description>Validation rule for matching regexps.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$regexp</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="regexp to match" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$message</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="message to use when validation fails" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>Constructor</description>
          <long-description/>
          <tag line="44" name="param" description="" type="string" variable="$regexp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$regexp</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="50">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="60" package="Default">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="55">
          <description>Returns the message associated with the current validation rule.</description>
          <long-description/>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="69" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="64">
          <description>Renders the current validation rule (for client side validation only)</description>
          <long-description/>
          <tag line="64" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="89" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="83">
          <description>Validates a value against the current validation rule.</description>
          <long-description/>
          <tag line="83" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="return" description="true if validation succeeds, false otherwise" type="\Textura\boolen">
            <type by_reference="false">\Textura\boolen</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/classes/FormBuilder.php" hash="6d4eb967e47054e0e9aa062d5ef44d01" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="85" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>FormBuilder</name>
      <full_name>\Textura\FormBuilder</full_name>
      <docblock line="29">
        <description>Class for building forms dynamically.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$form_id</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="id to use for the &lt;FORM&gt;-element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$action</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="action (url) where form data should be sent" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$method</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="method to use when sending form data" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Textura" package="Default">
        <name>$enctype</name>
        <default/>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="encoding to use when sending form data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="Textura" package="Default">
        <name>$elems</name>
        <default/>
        <docblock line="54">
          <description/>
          <long-description/>
          <tag line="54" name="var" description="form elements used by the current FormBuilder object" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="Textura" package="Default">
        <name>$elem_counts</name>
        <default/>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="var" description="keeps track of how many of each element type that the current FormBuilder object uses" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" namespace="Textura" package="Default">
        <name>$validator</name>
        <default/>
        <docblock line="65">
          <description/>
          <long-description/>
          <tag line="65" name="var" description="Validator object used for form validation" type="\Textura\Textura\Validator">
            <type by_reference="false">\Textura\Textura\Validator</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" namespace="Textura" package="Default">
        <name>$use_client_side_validation</name>
        <default/>
        <docblock line="70">
          <description/>
          <long-description/>
          <tag line="70" name="var" description="keeps track of whether the current FormBuilder object uses client side validation or not" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="84" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="76">
          <description>Constructor</description>
          <long-description/>
          <tag line="76" name="param" description="id used by &lt;FORM&gt; tag" type="string" variable="$form_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="action (URL) where to send form data" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="method to use when sending form data (GET or POST)" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="encoding to use when sending form data" type="string" variable="$enctype">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$form_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="84">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="84">
          <name>$enctype</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="118" package="Default">
        <name>addButton</name>
        <full_name>addButton</full_name>
        <docblock line="113">
          <description>Adds a button to the current FormBuilder object.</description>
          <long-description/>
          <tag line="113" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="127" package="Default">
        <name>addCheckbox</name>
        <full_name>addCheckbox</full_name>
        <docblock line="122">
          <description>Adds a checkbox to the current FormBuilder object.</description>
          <long-description/>
          <tag line="122" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="141" package="Default">
        <name>addCustomContent</name>
        <full_name>addCustomContent</full_name>
        <docblock line="136">
          <description>Adds custom content to the current FormBuilder object.</description>
          <long-description/>
          <tag line="136" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="152" package="Default">
        <name>addFile</name>
        <full_name>addFile</full_name>
        <docblock line="146">
          <description>Adds a file upload control to the current FormBuilder object.</description>
          <long-description/>
          <tag line="146" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
          <tag line="146" name="ignore" description=""/>
        </docblock>
        <argument line="152">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="161" package="Default">
        <name>addHidden</name>
        <full_name>addHidden</full_name>
        <docblock line="156">
          <description>Adds a hidden field to the current FormBuilder object.</description>
          <long-description/>
          <tag line="156" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="174" package="Default">
        <name>addPassword</name>
        <full_name>addPassword</full_name>
        <docblock line="169">
          <description>Adds a password field to the current FormBuilder object.</description>
          <long-description/>
          <tag line="169" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="187" package="Default">
        <name>addRadio</name>
        <full_name>addRadio</full_name>
        <docblock line="182">
          <description>Adds a radio button to the current FormBuilder object.</description>
          <long-description/>
          <tag line="182" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="196" package="Default">
        <name>addSelect</name>
        <full_name>addSelect</full_name>
        <docblock line="191">
          <description>Adds a select box to the current FormBuilder object.</description>
          <long-description/>
          <tag line="191" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="211" package="Default">
        <name>addSubmit</name>
        <full_name>addSubmit</full_name>
        <docblock line="206">
          <description>Adds a submit button to the current FormBuilder object.</description>
          <long-description/>
          <tag line="206" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="224" package="Default">
        <name>addText</name>
        <full_name>addText</full_name>
        <docblock line="219">
          <description>Adds a text field to the current FormBuilder object.</description>
          <long-description/>
          <tag line="219" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="237" package="Default">
        <name>addTextarea</name>
        <full_name>addTextarea</full_name>
        <docblock line="232">
          <description>Adds a text area to the current FormBuilder object.</description>
          <long-description/>
          <tag line="232" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="248" package="Default">
        <name>addValidation</name>
        <full_name>addValidation</full_name>
        <docblock line="241">
          <description>Adds validation to a field in the current FormBuilder object.</description>
          <long-description/>
          <tag line="241" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="241" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="248">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="248">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="248">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="258" package="Default">
        <name>getValidationErrors</name>
        <full_name>getValidationErrors</full_name>
        <docblock line="252">
          <description>Returns an array of validation errors (if any) in the current FormBuilder object.</description>
          <long-description>&lt;p&gt;This method
should only be called after validate() has been called on the current FormBuilder object.&lt;/p&gt;</long-description>
          <tag line="252" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="268" package="Default">
        <name>getUseClientSideValidation</name>
        <full_name>getUseClientSideValidation</full_name>
        <docblock line="262">
          <description>Returns whether the current FormBuilder object uses client side validation or not.</description>
          <long-description/>
          <tag line="262" name="return" description="true if the current FormBuilder object uses client side validation,&#10;  false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="278" package="Default">
        <name>setAction</name>
        <full_name>setAction</full_name>
        <docblock line="272">
          <description>Sets the action (URL) to where the form belonging to the current FormBuilder object
  should be sent.</description>
          <long-description/>
          <tag line="272" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="287" package="Default">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="282">
          <description>Sets the method to use when sending form data.</description>
          <long-description>&lt;p&gt;Should be set to either GET or POST.&lt;/p&gt;</long-description>
          <tag line="282" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="287">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="301" package="Default">
        <name>setEncType</name>
        <full_name>setEncType</full_name>
        <docblock line="296">
          <description>Sets the encoding type for the form belong to the current FormBuilder object.</description>
          <long-description/>
          <tag line="296" name="param" description="" type="string" variable="$enctype">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$enctype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="311" package="Default">
        <name>setUseClientSideValidation</name>
        <full_name>setUseClientSideValidation</full_name>
        <docblock line="305">
          <description>Sets whether the current FormBuilder object should use client side validation or not.</description>
          <long-description/>
          <tag line="305" name="param" description="true to use client side validation, false to not use&#10;  client side validation." type="\Textura\boolena" variable="$bool">
            <type by_reference="false">\Textura\boolena</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$bool</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="321" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="315">
          <description>Renders the form, including javscript methods for validation</description>
          <long-description/>
          <tag line="315" name="return" description="" type="\Textura\type">
            <type by_reference="false">\Textura\type</type>
          </tag>
          <tag line="315" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="449" package="Default">
        <name>updateAttribute</name>
        <full_name>updateAttribute</full_name>
        <docblock line="440">
          <description>Updates an attribute for an element in the current element list.</description>
          <long-description>&lt;p&gt;This is useful when something
needs to be changed after the original structure has been created.&lt;/p&gt;</long-description>
          <tag line="440" name="param" description="The id of the element to change" type="string" variable="$elem_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="440" name="param" description="The name of the attribute to change" type="string" variable="$attribute">
            <type by_reference="false">string</type>
          </tag>
          <tag line="440" name="param" description="The new value of the attribute" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="440" name="return" description="True if the update succeeded, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$elem_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$attribute</name>
          <default/>
          <type/>
        </argument>
        <argument line="449">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="468" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="462">
          <description>Validates the data sent using the current FormBuilder object.</description>
          <long-description/>
          <tag line="462" name="param" description="the values to validate" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="462" name="return" description="true if validation succeeds, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="478" package="Default">
        <name>addElem</name>
        <full_name>addElem</full_name>
        <docblock line="472">
          <description>Adds an element to the current FormBuilder object.</description>
          <long-description/>
          <tag line="472" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="472" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="478">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="500" package="Default">
        <name>getValueFromPost</name>
        <full_name>getValueFromPost</full_name>
        <docblock line="492">
          <description>Tries to fetch data for a field by inspecting the POST data sent with the current request.</description>
          <long-description>&lt;p&gt;If data for the requested field is available in the POST data, that data will be returned. If
the data is not avaialable, null will be returned instead.&lt;/p&gt;</long-description>
          <tag line="492" name="param" description="" type="string" variable="$field">
            <type by_reference="false">string</type>
          </tag>
          <tag line="492" name="return" description="" type="\Textura\mixed.">
            <type by_reference="false">\Textura\mixed.</type>
          </tag>
        </docblock>
        <argument line="500">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="515" package="Default">
        <name>getUniqueId</name>
        <full_name>getUniqueId</full_name>
        <docblock line="509">
          <description>Returns an unique name for a specific element type.</description>
          <long-description/>
          <tag line="509" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="509" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="515">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/classes/Validator.php" hash="c7087d22e4f59966535e0f46f0d5d9c9" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Validator</name>
      <full_name>\Textura\Validator</full_name>
      <docblock line="29">
        <description>Class for handling form validations</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$errors</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="array of current validation errors" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$validations</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="array of current validation rules" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="59" package="Default">
        <name>addValidation</name>
        <full_name>addValidation</full_name>
        <docblock line="52">
          <description>Adds a validation rule to the current Validator object.</description>
          <long-description/>
          <tag line="52" name="param" description="the field that should be associated with the validation rule" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="param" description="the type of validation rule" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="param" description="validation rule parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="102" package="Default">
        <name>getValidationErrors</name>
        <full_name>getValidationErrors</full_name>
        <docblock line="96">
          <description>Returns an array of validation errors (if any).</description>
          <long-description>&lt;p&gt;This method should only be called after
the validate() method has been called.&lt;/p&gt;</long-description>
          <tag line="96" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="111" package="Default">
        <name>hasValidations</name>
        <full_name>hasValidations</full_name>
        <docblock line="106">
          <description>Returns whether the current validator has any validations.</description>
          <long-description/>
          <tag line="106" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="122" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="115">
          <description>Return a string representing the javascript used to represent the validator.</description>
          <long-description>&lt;p&gt;If the validator
does not contain  any validations this method will return an emoty string.&lt;/p&gt;</long-description>
          <tag line="115" name="param" description="The id of the form to bind the validator to." type="string" variable="$form_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$form_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="158" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="151">
          <description>Validates an array of values against the set of validation rules associated with the current
Validator objet.</description>
          <long-description/>
          <tag line="151" name="param" description="" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="151" name="return" description="true if the validation succeeded, false otherwise." type="\Textura\boolen">
            <type by_reference="false">\Textura\boolen</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/classes/ValidationRuleInInterval.php" hash="ecf70f6c991da4f3e97a18f1315b49c1" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends>\Textura\ValidationRule</extends>
      <name>ValidationRuleInInterval</name>
      <full_name>\Textura\ValidationRuleInInterval</full_name>
      <docblock line="29">
        <description>Validation rule for matching intervals.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$min_value</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="minimum value to match. Could be either a float or an integer." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$max_value</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="maximum value to match. Could be either a float or an integer." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$message</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="message to use when validation fails" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="56" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Constructor</description>
          <long-description/>
          <tag line="49" name="param" description="" type="mixed" variable="$min_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="49" name="param" description="" type="mixed" variable="$max_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$min_value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$max_value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="67" package="Default">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="62">
          <description>Returns the message associated with the current validation rule.</description>
          <long-description/>
          <tag line="62" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="76" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="71">
          <description>Renders the current validation rule (for client side validation only)</description>
          <long-description/>
          <tag line="71" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="102" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="96">
          <description>Validates a value against the current validation rule.</description>
          <long-description/>
          <tag line="96" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="96" name="return" description="true if validation succeeds, false otherwise" type="\Textura\boolen">
            <type by_reference="false">\Textura\boolen</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/classes/ValidationRule.php" hash="3602aa8ebaa2f9c7f450917e7e6284f0" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="true" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>ValidationRule</name>
      <full_name>\Textura\ValidationRule</full_name>
      <docblock line="29">
        <description>Abstract class, representing a validation rule</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura" line="37" package="Default">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="34">
          <description>Returns the message associated with the current rule.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura" line="42" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="39">
          <description>Renders the current validation rule (only used with client side validation).</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura" line="48" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="44">
          <description>Validates a value against the current validation rule.</description>
          <long-description/>
          <tag line="44" name="param" description="value to validate against the current validation rule" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/classes/ValidationRuleHasValue.php" hash="640e0e2c8a7cf8ea1e450ec7d01ba048" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends>\Textura\ValidationRule</extends>
      <name>ValidationRuleHasValue</name>
      <full_name>\Textura\ValidationRuleHasValue</full_name>
      <docblock line="29">
        <description>Validation rule for ensuring that a field has a value.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$message</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="message to use when validation fails" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Constructor</description>
          <long-description/>
          <tag line="39" name="param" description="" type="\Textura\type" variable="$message">
            <type by_reference="false">\Textura\type</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="53" package="Default">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="48">
          <description>Returns the message associated with the current validation rule.</description>
          <long-description/>
          <tag line="48" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="62" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="57">
          <description>Renders the current validation rule (for client side validation only)</description>
          <long-description/>
          <tag line="57" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="77" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="71">
          <description>Validates a value against the current validation rule.</description>
          <long-description/>
          <tag line="71" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="return" description="true if validation succeeds, false otherwise" type="\Textura\boolen">
            <type by_reference="false">\Textura\boolen</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/FormBuilder/FormBuilderPlugin.php" hash="aa0489990c79da14817ed9d8597f03fc" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <implements>\Textura\Plugin</implements>
      <name>FormBuilderPlugin</name>
      <full_name>\Textura\FormBuilderPlugin</full_name>
      <docblock line="29">
        <description>Plugin for building forms dynamically.</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="references the one and only instance of this class" type="\Textura\Textura\FormBuilderPlugin">
            <type by_reference="false">\Textura\Textura\FormBuilderPlugin</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="44" package="Default">
        <name>getPaths</name>
        <full_name>getPaths</full_name>
        <docblock line="39">
          <description>Returns the paths from where the current plugin's classes will be loaded.</description>
          <long-description/>
          <tag line="39" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="55" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="52">
          <description>This method is automatically called by Textura whenever a plugin is registered.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="64" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="59">
          <description>Returns a single instance of the FormBuilderPlugin class.</description>
          <long-description/>
          <tag line="59" name="return" description="" type="\Textura\Textura\FormBuilderPlugin">
            <type by_reference="false">\Textura\Textura\FormBuilderPlugin</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/ThemeBuilder/classes/ThemeColumn.php" hash="0cf5d83e68e5252a2562730c6357d2cc" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="31" package="Default">
      <extends>\Textura\ThemeElement</extends>
      <name>ThemeColumn</name>
      <full_name>\Textura\ThemeColumn</full_name>
      <docblock line="28">
        <description>Class implementing a column in a theme</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="36" namespace="Textura" package="Default">
        <name>$id</name>
        <default/>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="unique id used for this column" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="Textura" package="Default">
        <name>$width</name>
        <default/>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="number of &quot;columns units&quot; this column spans" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="49" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>Constructor</description>
          <long-description/>
          <tag line="43" name="param" description="unique id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="number of &quot;column units&quot; to span" type="integer" variable="$width">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$width</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="59" package="Default">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="54">
          <description>Returns a hash for the current column.</description>
          <long-description/>
          <tag line="54" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="68" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="63">
          <description>Returns the id of the current column.</description>
          <long-description/>
          <tag line="63" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="77" package="Default">
        <name>getWidth</name>
        <full_name>getWidth</full_name>
        <docblock line="72">
          <description>Returns the number of "column units" the current column spans.</description>
          <long-description/>
          <tag line="72" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/ThemeBuilder/classes/ThemeBuilder.php" hash="abb24c67c1f1b4a096e1997deb7b6eaf" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="292" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>ThemeBuilder</name>
      <full_name>\Textura\ThemeBuilder</full_name>
      <docblock line="29">
        <description>Class for building themes.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$css_dir</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="directory for dynamic CSS content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$columns</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="array of ThemeColumn objects representing columns in the theme" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$column_width</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="number of pixels compromising a &quot;column unit&quot;" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Textura" package="Default">
        <name>$gutter_width</name>
        <default/>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="number of pixels between columns" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="Textura" package="Default">
        <name>$included_css</name>
        <default/>
        <docblock line="54">
          <description/>
          <long-description/>
          <tag line="54" name="var" description="array of custom LESS files" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="62" namespace="Textura" package="Default">
        <name>$template_dir</name>
        <default/>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="var" description="directory for dynamic Haml content" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="67" namespace="Textura" package="Default">
        <name>$width</name>
        <default/>
        <docblock line="64">
          <description/>
          <long-description/>
          <tag line="64" name="var" description="number of columns in theme" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="76" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="69">
          <description>Constructor</description>
          <long-description/>
          <tag line="69" name="param" description="base template to use when rendering" type="string" variable="$base_template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="directory for dynamic Haml content" type="string" variable="$template_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="directory for dynamic CSS content" type="string" variable="$css_dir">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$base_template</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$template_dir</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$css_dir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="93" package="Default">
        <name>addColumn</name>
        <full_name>addColumn</full_name>
        <docblock line="87">
          <description>Add a column to the current theme builder.</description>
          <long-description/>
          <tag line="87" name="param" description="a ThemeColumn object" type="\Textura\ThemeColumn" variable="$column">
            <type by_reference="false">\Textura\ThemeColumn</type>
          </tag>
          <tag line="87" name="throws" description="if a column with the same id is already present in the theme builder." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$column</name>
          <default/>
          <type>\Textura\ThemeColumn</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="106" package="Default">
        <name>getWidth</name>
        <full_name>getWidth</full_name>
        <docblock line="101">
          <description>Returns the number of columns for the current theme builder.</description>
          <long-description/>
          <tag line="101" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="117" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="110">
          <description>Renders the view associated with the current theme builder.</description>
          <long-description>&lt;p&gt;CSS files and HAML templates are
automatically generated if needed.&lt;/p&gt;</long-description>
          <tag line="110" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="throws" description="if the theme builder lacks all kinds of content." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="138" package="Default">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="132">
          <description>Returns a hash for the current theme builder.</description>
          <long-description>&lt;p&gt;This is used to decide whether CSS files and
HAML templates need to be generated or not in various situations.&lt;/p&gt;</long-description>
          <tag line="132" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="157" package="Default">
        <name>includeCSS</name>
        <full_name>includeCSS</full_name>
        <docblock line="152">
          <description>Add styles from LESS file.</description>
          <long-description/>
          <tag line="152" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="166" package="Default">
        <name>setBaseTemplate</name>
        <full_name>setBaseTemplate</full_name>
        <docblock line="161">
          <description>Sets the base Haml template to use for rendering.</description>
          <long-description/>
          <tag line="161" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="175" package="Default">
        <name>setColumnWidth</name>
        <full_name>setColumnWidth</full_name>
        <docblock line="170">
          <description>Sets the number of pixels used as a column "unit".</description>
          <long-description/>
          <tag line="170" name="param" description="" type="integer" variable="$width_in_pixels">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$width_in_pixels</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="184" package="Default">
        <name>setCSSDir</name>
        <full_name>setCSSDir</full_name>
        <docblock line="179">
          <description>Sets the directory to use for dynamically created CSS files.</description>
          <long-description/>
          <tag line="179" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="195" package="Default">
        <name>setContents</name>
        <full_name>setContents</full_name>
        <docblock line="188">
          <description>Sets the contents for a specific column.</description>
          <long-description/>
          <tag line="188" name="param" description="name identifying the column" type="string" variable="$column_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="contents to display in the column" type="string" variable="$contents">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="throws" description="if the column cannot be found" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$column_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="195">
          <name>$contents</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="208" package="Default">
        <name>setGutterWidth</name>
        <full_name>setGutterWidth</full_name>
        <docblock line="203">
          <description>Sets the spacing width between columns.</description>
          <long-description/>
          <tag line="203" name="param" description="" type="integer" variable="$width_in_pixels">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$width_in_pixels</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="217" package="Default">
        <name>setTemplateDir</name>
        <full_name>setTemplateDir</full_name>
        <docblock line="212">
          <description>Sets the directory where dynamtic HAML templates should be stored.</description>
          <long-description/>
          <tag line="212" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="224" package="Default">
        <name>calculateTotalWidth</name>
        <full_name>calculateTotalWidth</full_name>
        <docblock line="221">
          <description>Calculates the total number of "column uits" in the theme.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="238" package="Default">
        <name>getColumn</name>
        <full_name>getColumn</full_name>
        <docblock line="232">
          <description>Returns a column by id.</description>
          <long-description>&lt;p&gt;If the column is not present in the theme, null is returned.&lt;/p&gt;</long-description>
          <tag line="232" name="param" description="" type="string" variable="$column_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="return" description="" type="\Textura\ThemeColumn">
            <type by_reference="false">\Textura\ThemeColumn</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$column_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="255" package="Default">
        <name>hasColumn</name>
        <full_name>hasColumn</full_name>
        <docblock line="249">
          <description>Returns whether a specific column exists in the theme.</description>
          <long-description/>
          <tag line="249" name="param" description="" type="string" variable="$column_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="255">
          <name>$column_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="266" package="Default">
        <name>less2CSS</name>
        <full_name>less2CSS</full_name>
        <docblock line="259">
          <description>Converts a LESS file to a CSS file.</description>
          <long-description/>
          <tag line="259" name="param" description="path to less file" type="string" variable="$input_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="param" description="destination path. If omitted, the original LESS file will be&#10;  overwritten by the CSS file." type="string" variable="$output_path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$input_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$output_path</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="283" package="Default">
        <name>renderTemplate</name>
        <full_name>renderTemplate</full_name>
        <docblock line="278">
          <description>Renders the HAML template associated with the current theme builder</description>
          <long-description/>
          <tag line="278" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="313" package="Default">
        <name>writeCSS</name>
        <full_name>writeCSS</full_name>
        <docblock line="310">
          <description>Writes a CSS file for the current theme.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="347" package="Default">
        <name>writeTemplate</name>
        <full_name>writeTemplate</full_name>
        <docblock line="344">
          <description>Writes a HAML template file for the current theme.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/ThemeBuilder/classes/ThemeElement.php" hash="738fb1f0a627239383a9a3ccfe6be9c7" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="31" package="Default">
      <extends/>
      <name>ThemeElement</name>
      <full_name>\Textura\ThemeElement</full_name>
      <docblock line="28">
        <description>Class acting as a base class for all "theme elements"</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" namespace="Textura" package="Default">
        <name>$contents</name>
        <default/>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="contents of this elemnent" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="43" package="Default">
        <name>getContents</name>
        <full_name>getContents</full_name>
        <docblock line="38">
          <description>Returns the contents of the current element.</description>
          <long-description/>
          <tag line="38" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="57" package="Default">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="52">
          <description>Returns a hash of the current element.</description>
          <long-description/>
          <tag line="52" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="71" package="Default">
        <name>setContents</name>
        <full_name>setContents</full_name>
        <docblock line="66">
          <description>Sets the contents of the current element.</description>
          <long-description/>
          <tag line="66" name="param" description="" type="\Textura\ThemeElement|String" variable="$theme_element_or_string">
            <type by_reference="false">\Textura\ThemeElement</type>
            <type by_reference="false">String</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$theme_element_or_string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/plugins/ThemeBuilder/ThemeBuilderPlugin.php" hash="609983930d54aed39e1dbb7384b24636" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="57" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <implements>\Textura\Plugin</implements>
      <name>ThemeBuilderPlugin</name>
      <full_name>\Textura\ThemeBuilderPlugin</full_name>
      <docblock line="29">
        <description>Plugin for building themes dynamically.</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="references the one and only instance of this class" type="\Textura\Textura\ThemeBuilderPlugin">
            <type by_reference="false">\Textura\Textura\ThemeBuilderPlugin</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="44" package="Default">
        <name>getPaths</name>
        <full_name>getPaths</full_name>
        <docblock line="39">
          <description>Returns the paths from where the current plugin's classes will be loaded.</description>
          <long-description/>
          <tag line="39" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="55" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="52">
          <description>This method is automatically called by Textura whenever a plugin is registered.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="67" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="62">
          <description>Returns a single instance of the FormBuilderPlugin class.</description>
          <long-description/>
          <tag line="62" name="return" description="" type="\Textura\Textura\ThemeBuilderPlugin">
            <type by_reference="false">\Textura\Textura\ThemeBuilderPlugin</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/core/interfaces/Plugin.php" hash="131c7da5c710494d8dac2778704b8707" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <interface namespace="Textura" line="32" package="Default">
      <name>Plugin</name>
      <full_name>\Textura\Plugin</full_name>
      <extends>\Textura\Singleton</extends>
      <docblock line="29">
        <description>Interface for classes acting as plugins for Textura</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="37" package="Default">
        <name>getPaths</name>
        <full_name>getPaths</full_name>
        <docblock line="34">
          <description>Returns an array of paths where the classes needed by the plugin can be loaded from</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="43" package="Default">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="39">
          <description>Called whenever a plugin is registered in Textura.</description>
          <long-description>&lt;p&gt;If your plugin needs any type if magic
initialization you should place your code in this method.&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="src/textura/core/interfaces/Singleton.php" hash="77aaa4f7aecedc06c186661f0e198693" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <interface namespace="Textura" line="29" package="Default">
      <name>Singleton</name>
      <full_name>\Textura\Singleton</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="34" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="31">
          <description>Should return a single anstance of the class implementing this interface.</description>
          <long-description/>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="src/textura/core/classes/Response.php" hash="cbccbcc4a87c38bd682f4bd02a9d886f" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Response</name>
      <full_name>\Textura\Response</full_name>
      <docblock line="29">
        <description>This class represents the response sent to the browser</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$cookies</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="response cookies" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$headers</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="response headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$body</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="response body" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="53" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Contructior.</description>
          <long-description>&lt;p&gt;This method is private, use Response::init to initialize
the response object instead.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="64" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="59">
          <description>Initializes a new Response object</description>
          <long-description/>
          <tag line="59" name="return" description="" type="\Textura\Textura\Response">
            <type by_reference="false">\Textura\Textura\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="74" package="Default">
        <name>appendToBody</name>
        <full_name>appendToBody</full_name>
        <docblock line="68">
          <description>Appends data to the body of the response</description>
          <long-description/>
          <tag line="68" name="param" description="Should be a string, but will be converted to a string if&#10;of any other type." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="82" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="79">
          <description>Clears the reponse of all data (both headers and body)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="91" package="Default">
        <name>clearBody</name>
        <full_name>clearBody</full_name>
        <docblock line="88">
          <description>Clears the body of the response</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="98" package="Default">
        <name>clearCookies</name>
        <full_name>clearCookies</full_name>
        <docblock line="95">
          <description>Clears the cookies of the response</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="105" package="Default">
        <name>clearHeaders</name>
        <full_name>clearHeaders</full_name>
        <docblock line="102">
          <description>Clears the headers of the response</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="114" package="Default">
        <name>getAllHeaders</name>
        <full_name>getAllHeaders</full_name>
        <docblock line="109">
          <description>Returns all headers of the response</description>
          <long-description/>
          <tag line="109" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="124" package="Default">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="118">
          <description>Returns a specific header of the response.</description>
          <long-description>&lt;p&gt;If the header is not set, null is returned.&lt;/p&gt;</long-description>
          <tag line="118" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="131" package="Default">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="128">
          <description>Sends the response to the browser</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="150" package="Default">
        <name>send404</name>
        <full_name>send404</full_name>
        <docblock line="145">
          <description>Send a 404 status code with the specified message to the browser</description>
          <long-description/>
          <tag line="145" name="param" description="The message to send to the browser" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$message</name>
          <default>'Not found'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="167" package="Default">
        <name>send500</name>
        <full_name>send500</full_name>
        <docblock line="160">
          <description>Send a 500 status code with the specified message to the browser</description>
          <long-description/>
          <tag line="160" name="param" description="The execption that was thrown. This parameter is used for&#10;                             printing errors/printing beacktraces is enabled." type="\Exception" variable="$error">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="160" name="param" description="The message to send to the browser" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$error</name>
          <default/>
          <type>\Exception</type>
        </argument>
        <argument line="167">
          <name>$message</name>
          <default>'Internal server error'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="191" package="Default">
        <name>sendBody</name>
        <full_name>sendBody</full_name>
        <docblock line="188">
          <description>Sends the body to the browser</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="198" package="Default">
        <name>sendCookies</name>
        <full_name>sendCookies</full_name>
        <docblock line="195">
          <description>Sends all cookies associated with the current Response object.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="215" package="Default">
        <name>sendHeaders</name>
        <full_name>sendHeaders</full_name>
        <docblock line="212">
          <description>Sends the headers to the browser</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="228" package="Default">
        <name>sendRedirect</name>
        <full_name>sendRedirect</full_name>
        <docblock line="221">
          <description>redirects the client to another location.</description>
          <long-description/>
          <tag line="221" name="param" description="" type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="" type="integer" variable="$status">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="221" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$location</name>
          <default/>
          <type/>
        </argument>
        <argument line="228">
          <name>$status</name>
          <default>302</default>
          <type/>
        </argument>
        <argument line="228">
          <name>$message</name>
          <default>'Found'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="250" package="Default">
        <name>setCookie</name>
        <full_name>setCookie</full_name>
        <docblock line="236">
          <description>Adds a cookie to the response to the client</description>
          <long-description/>
          <tag line="236" name="param" description="cookie name" type="string" variable="$cookie_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="cookie value" type="mixed" variable="$cookie_value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="236" name="param" description="cookie expire date. By default, Textura does not set an explicit&#10;  expiration date. When this parameter is set, Textura uses the Expires parameter in the&#10;  Set-Cookie HTTP header to set an expire date." type="string" variable="$cookie_expire">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="cookie path. By default, Textura will use the path returned by&#10;  Textura\PathBuilder::getTexturaBaseURL()." type="string" variable="$cookie_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="cookie domain" type="string" variable="$cookie_domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="236" name="param" description="is cookie HTTPS only?" type="boolean" variable="$cookie_secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="236" name="param" description="is cookie invisible to XHR requests?" type="boolean" variable="$cookie_httponly">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$cookie_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="252">
          <name>$cookie_value</name>
          <default/>
          <type/>
        </argument>
        <argument line="253">
          <name>$cookie_expire</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="254">
          <name>$cookie_path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="255">
          <name>$cookie_domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="256">
          <name>$cookie_secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="257">
          <name>$cookie_httponly</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="276" package="Default">
        <name>setSessionCookie</name>
        <full_name>setSessionCookie</full_name>
        <docblock line="273">
          <description>Sets session cookue (if currently active controller uses session).</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="308" package="Default">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="303">
          <description>replaces the body of the response with $data</description>
          <long-description/>
          <tag line="303" name="param" description="Should be a strong, but will be converted to a string otherwise" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="319" package="Default">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="313">
          <description>Sets a header in the response</description>
          <long-description/>
          <tag line="313" name="param" description="The headers to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="313" name="param" description="The value to use for the header" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="319">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="231">Force absolute URL?</todo>
    </markers>
  </file>
  <file path="src/textura/core/classes/model/SQLiteLogger.php" hash="c0b20c32866f77c6b79762a719405bc9" package="Textura\Model">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
      <tag line="21" name="subpackage" description="Model"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura\Model" line="33" package="Default">
      <extends/>
      <name>SQLiteLogger</name>
      <full_name>\Textura\Model\SQLiteLogger</full_name>
      <docblock line="30">
        <description>Class implementing logging to a SQLite database.</description>
        <long-description/>
      </docblock>
      <constant namespace="Textura\Model" line="35" package="Default">
        <name>MSG_TYPE_DEV</name>
        <full_name>MSG_TYPE_DEV</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Textura\Model" line="36" package="Default">
        <name>MSG_TYPE_DEBUG</name>
        <full_name>MSG_TYPE_DEBUG</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Textura\Model" line="37" package="Default">
        <name>MSG_TYPE_INFO</name>
        <full_name>MSG_TYPE_INFO</full_name>
        <value>3</value>
      </constant>
      <constant namespace="Textura\Model" line="38" package="Default">
        <name>MSG_TYPE_WARN</name>
        <full_name>MSG_TYPE_WARN</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Textura\Model" line="39" package="Default">
        <name>MSG_TYPE_ERROR</name>
        <full_name>MSG_TYPE_ERROR</full_name>
        <value>5</value>
      </constant>
      <property final="false" static="false" visibility="private" line="44" namespace="Textura\Model" package="Default">
        <name>$adapter</name>
        <default/>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="adapter instance to use for connecting to the database" type="\Textura\Model\Textura\SQLiteDBAdapter">
            <type by_reference="false">\Textura\Model\Textura\SQLiteDBAdapter</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="Textura\Model" package="Default">
        <name>$table</name>
        <default/>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="var" description="table to write log messages to" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="58" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="52">
          <description>Constructor</description>
          <long-description/>
          <tag line="52" name="param" description="" type="\Textura\Model\SQLiteDBAdapter" variable="$adapter">
            <type by_reference="false">\Textura\Model\SQLiteDBAdapter</type>
          </tag>
          <tag line="52" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$adapter</name>
          <default/>
          <type>\Textura\Model\SQLiteDBAdapter</type>
        </argument>
        <argument line="58">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="69" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="64">
          <description>Logs a message with severity "debug"</description>
          <long-description/>
          <tag line="64" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="78" package="Default">
        <name>dev</name>
        <full_name>dev</full_name>
        <docblock line="73">
          <description>Logs a message with severity "dev"</description>
          <long-description/>
          <tag line="73" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="87" package="Default">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="82">
          <description>Logs a message with severity "error"</description>
          <long-description/>
          <tag line="82" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="96" package="Default">
        <name>info</name>
        <full_name>info</full_name>
        <docblock line="91">
          <description>Logs a message with severity "info"</description>
          <long-description/>
          <tag line="91" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="106" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="100">
          <description>Logs a message</description>
          <long-description/>
          <tag line="100" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="" type="integer" variable="$severity">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="106">
          <name>$severity</name>
          <default>self::MSG_TYPE_DEV</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="121" package="Default">
        <name>warn</name>
        <full_name>warn</full_name>
        <docblock line="116">
          <description>Logs a message with severity "warn"</description>
          <long-description/>
          <tag line="116" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="128" package="Default">
        <name>createLogTable</name>
        <full_name>createLogTable</full_name>
        <docblock line="125">
          <description>Creates table used for log messages.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/model/ModelManager.php" hash="f6bd0f30b7ecb60a88ae217a4ecb9f98" package="Textura\Model">
    <docblock line="21">
      <description>Textura</description>
      <long-description></long-description>
      <tag line="21" name="package" description="Textura"/>
      <tag line="21" name="subpackage" description="Model"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura\Model" line="33" package="Default">
      <extends/>
      <implements>\Textura\Singleton</implements>
      <name>ModelManager</name>
      <full_name>\Textura\Model\ModelManager</full_name>
      <docblock line="30">
        <description>Class responsible for loading and saving model objects.</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="Textura\Model" package="Default">
        <name>$db_manager</name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag line="35" name="var" description="database manager" type="\Textura\Model\Textura\Mpdel\DBManager">
            <type by_reference="false">\Textura\Model\Textura\Mpdel\DBManager</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="Textura\Model" package="Default">
        <name>$model_map</name>
        <default></default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="var" description="array containing model definitions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="48" namespace="Textura\Model" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="var" description="the one and only instance of this class" type="\Textura\Model\Textura\Model\ModelManager">
            <type by_reference="false">\Textura\Model\Textura\Model\ModelManager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="53" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura\Model" line="63" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="58">
          <description>Returns the one and only instance of this class.</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="\Textura\Model\Textura\Model\ModelManager">
            <type by_reference="false">\Textura\Model\Textura\Model\ModelManager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="73" package="Default">
        <name>getMap</name>
        <full_name>getMap</full_name>
        <docblock line="68">
          <description>Returns an array containing the currently mapped model classes.</description>
          <long-description></long-description>
          <tag line="68" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="84" package="Default">
        <name>getProperties</name>
        <full_name>getProperties</full_name>
        <docblock line="77">
          <description>Returns an array containing the properties defined by the specified model class.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="throws" description="if the model class cannot be loaded" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="100" package="Default">
        <name>getPropertyNames</name>
        <full_name>getPropertyNames</full_name>
        <docblock line="94">
          <description>Returns an array containing the property names defined by the specified model class.</description>
          <long-description></long-description>
          <tag line="94" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="111" package="Default">
        <name>getTable</name>
        <full_name>getTable</full_name>
        <docblock line="104">
          <description>Returns the table name mapped to the specified model class.</description>
          <long-description></long-description>
          <tag line="104" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="throws" description="if the model class cannot be loaded" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="129" package="Default">
        <name>loadSingleModelInstance</name>
        <full_name>loadSingleModelInstance</full_name>
        <docblock line="121">
          <description>Loads a single instance of the specified model class.</description>
          <long-description></long-description>
          <tag line="121" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="" type="integer" variable="$primary_key_value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="121" name="return" description="" type="null|\Textura\Model\model_class">
            <type by_reference="false">null</type>
            <type by_reference="false">\Textura\Model\model_class</type>
          </tag>
          <tag line="121" name="throws" description="if the model class cannot be loaded" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$primary_key_value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="167" package="Default">
        <name>deleteModelInstance</name>
        <full_name>deleteModelInstance</full_name>
        <docblock line="162">
          <description>Deletes a model instance from the underlying database.</description>
          <long-description></long-description>
          <tag line="162" name="param" description="" type="\Textura\Model\Textura\Model" variable="$model_instance">
            <type by_reference="false">\Textura\Model\Textura\Model</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$model_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="187" package="Default">
        <name>loadModelInstances</name>
        <full_name>loadModelInstances</full_name>
        <docblock line="179">
          <description>Loads zero or more instances of the specified model class.</description>
          <long-description></long-description>
          <tag line="179" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="param" description="" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="179" name="return" description="" type="\Textura\Model\model_class">
            <type by_reference="false">\Textura\Model\model_class</type>
          </tag>
          <tag line="179" name="throws" description="if the model class cannot be loaded" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="215" package="Default">
        <name>saveModelInstance</name>
        <full_name>saveModelInstance</full_name>
        <docblock line="210">
          <description>Saves a model instance</description>
          <long-description></long-description>
          <tag line="210" name="param" description="" type="\Textura\Model" variable="$model_instance">
            <type by_reference="false">\Textura\Model</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$model_instance</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="240" package="Default">
        <name>loadModel</name>
        <full_name>loadModel</full_name>
        <docblock line="233">
          <description>Loads the model definition for the specified model class and caches it in the model map.</description>
          <long-description></long-description>
          <tag line="233" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="This method always return true (or throws an exception)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="233" name="throws" description="if the model does not have a valid primary key" type="\LogicExecption">
            <type by_reference="false">\LogicExecption</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="283" package="Default">
        <name>modelIsLoaded</name>
        <full_name>modelIsLoaded</full_name>
        <docblock line="277">
          <description>Returns whether the specified model class is already cached in the model map or not.</description>
          <long-description></long-description>
          <tag line="277" name="param" description="" type="string" variable="$model_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="277" name="return" description="true if the model is already cached, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$model_class</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="249">Need to handle classes with special chars</todo>
    </markers>
  </file>
  <file path="src/textura/core/classes/model/DBManager.php" hash="f0e9a51ffedd892380b8a30147922138" package="Textura\Model">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
      <tag line="21" name="subpackage" description="Model"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura\Model" line="35" package="Default">
      <extends/>
      <implements>\Textura\Singleton</implements>
      <name>DBManager</name>
      <full_name>\Textura\Model\DBManager</full_name>
      <docblock line="30">
        <description>Class acting as an intermediary between the model manager and the database adapter.</description>
        <long-description>&lt;p&gt;This class
is responsible for setting up the requested database adapter and forwarding request from clients
to the database adapter.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="40" namespace="Textura\Model" package="Default">
        <name>$adapter</name>
        <default/>
        <docblock line="37">
          <description/>
          <long-description/>
          <tag line="37" name="var" description="database adapter" type="\Textura\Model\Textura\Model\DBAdapter">
            <type by_reference="false">\Textura\Model\Textura\Model\DBAdapter</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="45" namespace="Textura\Model" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="the one and only instance of this class" type="\Textura\Model\Textura\Model\DBManager">
            <type by_reference="false">\Textura\Model\Textura\Model\DBManager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura\Model" line="63" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="58">
          <description>Returns the one and only instance of this class.</description>
          <long-description/>
          <tag line="58" name="return" description="" type="\Textura\Model\Textura\Model\DBManager">
            <type by_reference="false">\Textura\Model\Textura\Model\DBManager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="74" package="Default">
        <name>deleteRows</name>
        <full_name>deleteRows</full_name>
        <docblock line="68">
          <description>Deletes zero or more rows from the underlying database.</description>
          <long-description/>
          <tag line="68" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="conditions for WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$conditions</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="84" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="78">
          <description>Returns an array containing the field of the specified table from the underlying database.</description>
          <long-description/>
          <tag line="78" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="95" package="Default">
        <name>insertRow</name>
        <full_name>insertRow</full_name>
        <docblock line="88">
          <description>Inserts a row into the specified table in the underlying database.</description>
          <long-description/>
          <tag line="88" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="values to insert" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="id of inserted row" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="107" package="Default">
        <name>selectRows</name>
        <full_name>selectRows</full_name>
        <docblock line="99">
          <description>Select zero or more rows from the specified table from the underlying database.</description>
          <long-description/>
          <tag line="99" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="conditions for WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="param" description="fields to select. If left unspecified, all fields are selected." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="107">
          <name>$conditions</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="107">
          <name>$fields</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="119" package="Default">
        <name>updateRows</name>
        <full_name>updateRows</full_name>
        <docblock line="111">
          <description>Updates one or more rows in the specified table in the underlying database.</description>
          <long-description/>
          <tag line="111" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="conditions used in WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="param" description="values to set in the database" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$conditions</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="119">
          <name>$values</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="131" package="Default">
        <name>getAdapterInstance</name>
        <full_name>getAdapterInstance</full_name>
        <docblock line="123">
          <description>Returns a new adapter instance</description>
          <long-description/>
          <tag line="123" name="param" description="" type="string" variable="$adapter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="123" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="123" name="throws" description="If the adapter cannot be found" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$adapter</name>
          <default/>
          <type/>
        </argument>
        <argument line="131">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/model/SQLiteDBAdapter.php" hash="62ccbe581ba9a59e0824f3faa6302fbf" package="Textura\Model">
    <docblock line="21">
      <description>Textura</description>
      <long-description></long-description>
      <tag line="21" name="package" description="Textura"/>
      <tag line="21" name="subpackage" description="Model"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura\Model" line="33" package="Default">
      <extends>\Textura\Model\DBAdapter</extends>
      <name>SQLiteDBAdapter</name>
      <full_name>\Textura\Model\SQLiteDBAdapter</full_name>
      <docblock line="30">
        <description>Database adapter for SQLite(3)</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="Textura\Model" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag line="35" name="var" description="database connection" type="\SQLite3">
            <type by_reference="false">\SQLite3</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="Textura\Model" package="Default">
        <name>$filename</name>
        <default></default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="var" description="path to SQLite database" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="Textura\Model" package="Default">
        <name>$flags</name>
        <default></default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="var" description="flags used when connecting to SQLite database" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Textura\Model" package="Default">
        <name>$encryption_key</name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag line="50" name="var" description="encryption key used when connecting to SQLite database" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="Textura\Model" package="Default">
        <name>$logger</name>
        <default></default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag line="55" name="var" description="database logger" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="65" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="60" name="param" description="connection parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Textura\Model" line="94" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="91">
          <description>Connects to the database</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="117" package="Default">
        <name>deleteRows</name>
        <full_name>deleteRows</full_name>
        <docblock line="111">
          <description>Deletes zero or more rows from the SQLite database.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="table to delete rows from" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="array of conditions used in WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="134" package="Default">
        <name>exec</name>
        <full_name>exec</full_name>
        <docblock line="128">
          <description>Executes a query that does not return any rows.</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="param" description="true if query should be logged, false otherwise" type="boolean" variable="$log_query">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$log_query</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="148" package="Default">
        <name>getFields</name>
        <full_name>getFields</full_name>
        <docblock line="140">
          <description>Gets available fields (name, data_type) from a table.</description>
          <long-description>&lt;p&gt;If the table does not exist, an
exception will be thrown.&lt;/p&gt;</long-description>
          <tag line="140" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="140" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="174" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="167">
          <description>Sends a query to the DB and returns the result as an associative array</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="true if query should be logged, false otherwise" type="boolean" variable="$log_query">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="167" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="174">
          <name>$log_query</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="184" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="180">
          <description>Returns whether there exists an open connection to the DB or not</description>
          <long-description></long-description>
          <tag line="180" name="return" description="" type="\Textura\Model\type">
            <type by_reference="false">\Textura\Model\type</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="195" package="Default">
        <name>insertRow</name>
        <full_name>insertRow</full_name>
        <docblock line="188">
          <description>Inserts a row into the underlying database.</description>
          <long-description></long-description>
          <tag line="188" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="values to insert" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="188" name="return" description="id of inserted row" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="220" package="Default">
        <name>normalizeValue</name>
        <full_name>normalizeValue</full_name>
        <docblock line="214">
          <description>Normalizes a value so that it isafe for SQLite to use it.</description>
          <long-description></long-description>
          <tag line="214" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="214" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="241" package="Default">
        <name>selectRows</name>
        <full_name>selectRows</full_name>
        <docblock line="232">
          <description>Selects zero or more rows from the specified table.</description>
          <long-description></long-description>
          <tag line="232" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="param" description="conditions for WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="232" name="param" description="fields to select. If left unspecified, all fields are selected." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
          <tag line="232" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="232" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="241">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="241">
          <name>$fields</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="300" package="Default">
        <name>updateRows</name>
        <full_name>updateRows</full_name>
        <docblock line="293">
          <description>Updates zero or more rows in the underlying database.</description>
          <long-description></long-description>
          <tag line="293" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="293" name="param" description="conditions in where clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="293" name="param" description="values to update the table with" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="300">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="300">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura\Model" line="324" package="Default">
        <name>tableExists</name>
        <full_name>tableExists</full_name>
        <docblock line="318">
          <description>Returns whether a specific table exists or not</description>
          <long-description></long-description>
          <tag line="318" name="param" description="" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Textura\Model" line="341" package="Default">
        <name>validateParams</name>
        <full_name>validateParams</full_name>
        <docblock line="334">
          <description>Validates the connection parameters for the current database adapter.</description>
          <long-description></long-description>
          <tag line="334" name="param" description="connection parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="array with all invalid parameters filtered out" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="throws" description="if not all required params are present" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="367" package="Default">
        <name>getResultAsArray</name>
        <full_name>getResultAsArray</full_name>
        <docblock line="361">
          <description>Returns the result from a DB queray as an associative array.</description>
          <long-description></long-description>
          <tag line="361" name="param" description="" type="\SQLite3Result" variable="$result">
            <type by_reference="false">\SQLite3Result</type>
          </tag>
          <tag line="361" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$result</name>
          <default></default>
          <type>\SQLite3Result</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura\Model" line="381" package="Default">
        <name>convertFieldType</name>
        <full_name>convertFieldType</full_name>
        <docblock line="375">
          <description>Translates a SQLite field type to a DBAdapter field type.</description>
          <long-description></long-description>
          <tag line="375" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="375" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/model/DBAdapter.php" hash="31d62342578537fd8f6ae56786aab0e8" package="Textura\Model">
    <docblock line="21">
      <description>Textura</description>
      <long-description></long-description>
      <tag line="21" name="package" description="Textura"/>
      <tag line="21" name="subpackage" description="Model"/>
    </docblock>
    <class final="false" abstract="true" namespace="Textura\Model" line="33" package="Default">
      <extends/>
      <name>DBAdapter</name>
      <full_name>\Textura\Model\DBAdapter</full_name>
      <docblock line="30">
        <description>Abstract class representing a database adapter.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="Textura\Model" line="36" package="Default">
        <name>OP_EQ</name>
        <full_name>OP_EQ</full_name>
        <value>'='</value>
      </constant>
      <constant namespace="Textura\Model" line="37" package="Default">
        <name>OP_GET</name>
        <full_name>OP_GET</full_name>
        <value>'&gt;='</value>
      </constant>
      <constant namespace="Textura\Model" line="38" package="Default">
        <name>OP_GT</name>
        <full_name>OP_GT</full_name>
        <value>'&gt;'</value>
      </constant>
      <constant namespace="Textura\Model" line="39" package="Default">
        <name>OP_IN</name>
        <full_name>OP_IN</full_name>
        <value>'in'</value>
      </constant>
      <constant namespace="Textura\Model" line="40" package="Default">
        <name>OP_LET</name>
        <full_name>OP_LET</full_name>
        <value>'&lt;='</value>
      </constant>
      <constant namespace="Textura\Model" line="41" package="Default">
        <name>OP_LT</name>
        <full_name>OP_LT</full_name>
        <value>'&lt;'</value>
      </constant>
      <constant namespace="Textura\Model" line="44" package="Default">
        <name>TYPE_INTEGER</name>
        <full_name>TYPE_INTEGER</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Textura\Model" line="45" package="Default">
        <name>TYPE_FLOAT</name>
        <full_name>TYPE_FLOAT</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Textura\Model" line="46" package="Default">
        <name>TYPE_MODEL</name>
        <full_name>TYPE_MODEL</full_name>
        <value>3</value>
      </constant>
      <constant namespace="Textura\Model" line="47" package="Default">
        <name>TYPE_STRING</name>
        <full_name>TYPE_STRING</full_name>
        <value>4</value>
      </constant>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="54" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="49" name="param" description="parameters used to connect to the database" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Textura\Model" line="59" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="56">
          <description>Connects to the database.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="66" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="61">
          <description>Sends a custom SQL query to the underlying database.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="the query to send to the underlying database" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="74" package="Default">
        <name>tableExists</name>
        <full_name>tableExists</full_name>
        <docblock line="68">
          <description>Returns whether the underlying database has a specified schema (table) or not.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="true if the table exists in the database, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Textura\Model" line="82" package="Default">
        <name>isValidOperator</name>
        <full_name>isValidOperator</full_name>
        <docblock line="76">
          <description>Returns whether an operator is a valid operator for database query.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="" type="string" variable="$operator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="true if the specified operator is valid, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$operator</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="97" package="Default">
        <name>insertRow</name>
        <full_name>insertRow</full_name>
        <docblock line="91">
          <description>Inserts a row inte a database table in the underlying database.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="values to insert into the table" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="106" package="Default">
        <name>selectRows</name>
        <full_name>selectRows</full_name>
        <docblock line="99">
          <description>Performs a SELECT query on the underlying database.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="conditions for WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="param" description="fields to select. If left unspecified, all fields are selected." type="array" variable="$fields">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="106">
          <name>$fields</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="115" package="Default">
        <name>updateRows</name>
        <full_name>updateRows</full_name>
        <docblock line="108">
          <description>Updates one or more rows in the underlying database.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="conditions used in WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="108" name="param" description="values to update the table with" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="115">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="115">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Textura\Model" line="123" package="Default">
        <name>validateParams</name>
        <full_name>validateParams</full_name>
        <docblock line="117">
          <description>Returns whether the provided connection parmeters are valid or not.</description>
          <long-description></long-description>
          <tag line="117" name="param" description="connection parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="117" name="return" description="true if parameters are valid, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Textura\Model" line="131" package="Default">
        <name>deleteRows</name>
        <full_name>deleteRows</full_name>
        <docblock line="125">
          <description>Deletes zero or more rows from the underlying database.</description>
          <long-description></long-description>
          <tag line="125" name="param" description="table name" type="string" variable="$table">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="conditions to use in WHERE clause" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Controller.php" hash="6572d3ea3cc680ed7d040730025e436d" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="true" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Controller</name>
      <full_name>\Textura\Controller</full_name>
      <docblock line="29">
        <description>This class works as the base class for all controllers in Textura.</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$RESERVED_INSTANCE_VARS</name>
        <default>array('action', 'application', 'controller', 'request', 'response', 'session')</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="list of roperties that the user may read but not change" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="43" namespace="Textura" package="Default">
        <name>$use_session</name>
        <default>false</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="true to use sessions, false to disable sessions (for the current controller)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="48" namespace="Textura" package="Default">
        <name>$session_scope</name>
        <default>'application'</default>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="scope for session. Can be set to either 'global', 'application' or 'controller'" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Textura" package="Default">
        <name>$instance_vars</name>
        <default/>
        <docblock line="50">
          <description/>
          <long-description/>
          <tag line="50" name="var" description="list of user defined properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="58" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="65" package="Default">
        <name>clearInstanceVars</name>
        <full_name>clearInstanceVars</full_name>
        <docblock line="62">
          <description>Clears all instance variables.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="74" package="Default">
        <name>getDefaultAction</name>
        <full_name>getDefaultAction</full_name>
        <docblock line="69">
          <description>Returns the "default action" for the current controller object.</description>
          <long-description/>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="83" package="Default">
        <name>getInstanceVars</name>
        <full_name>getInstanceVars</full_name>
        <docblock line="78">
          <description>Returns the list of used defined properties</description>
          <long-description/>
          <tag line="78" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="113" package="Default">
        <name>getSessionScope</name>
        <full_name>getSessionScope</full_name>
        <docblock line="101">
          <description>Returns the session "scope".</description>
          <long-description>&lt;p&gt;The session scope can be one of three predefined values:
'global'       When using this value, the session cookie associated with the request will have
               the path '/'.
'application'  When using this value, the session cookie associated with the request will have
               the path returned by PathBuilder::getTexturaBaseURL().
'controller'  When using this value, the session cookie associated with the request will have
               the path returned by PathBuilder::buildRoute($current_controller_class).&lt;/p&gt;</long-description>
          <tag line="101" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="throws" description="If sessions are not used for the current controller" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="126" package="Default">
        <name>r</name>
        <full_name>r</full_name>
        <docblock line="120">
          <description>Returns a route to an action in another controller</description>
          <long-description/>
          <tag line="120" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="157" package="Default">
        <name>rs</name>
        <full_name>rs</full_name>
        <docblock line="151">
          <description>Returns a route to an action within the current controller</description>
          <long-description/>
          <tag line="151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="187" package="Default">
        <name>rst</name>
        <full_name>rst</full_name>
        <docblock line="181">
          <description>Returns a route to some static content.</description>
          <long-description/>
          <tag line="181" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="201" package="Default">
        <name>useSession</name>
        <full_name>useSession</full_name>
        <docblock line="196">
          <description>Returns whether the current controller class uses a session or not.</description>
          <long-description/>
          <tag line="196" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="212" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="205">
          <description>Magic getter.</description>
          <long-description>&lt;p&gt;Can be used to either retrieve either a built-in property or
a user-defined property. If $key cannot be found, null is returned.&lt;/p&gt;</long-description>
          <tag line="205" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="225" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="217">
          <description>Magic setter.</description>
          <long-description>&lt;p&gt;This method allows the user to set his/her own properties. The properties
can be named anything as long as the name can be represented a normal PHP variable.&lt;/p&gt;</long-description>
          <tag line="217" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="217" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="217" name="throws" description="If the user tries to set a reserved property" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="225">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="237" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="232">
          <description>Returns a string representation of the current object.</description>
          <long-description/>
          <tag line="232" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/FileLogger.php" hash="8b5944991facea7c407258b74c2d7a26" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>FileLogger</name>
      <full_name>\Textura\FileLogger</full_name>
      <docblock line="29">
        <description>Class for logging messages to a file</description>
        <long-description/>
      </docblock>
      <constant namespace="Textura" line="34" package="Default">
        <name>MSG_TYPE_DEV</name>
        <full_name>MSG_TYPE_DEV</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Textura" line="35" package="Default">
        <name>MSG_TYPE_DEBUG</name>
        <full_name>MSG_TYPE_DEBUG</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Textura" line="36" package="Default">
        <name>MSG_TYPE_INFO</name>
        <full_name>MSG_TYPE_INFO</full_name>
        <value>3</value>
      </constant>
      <constant namespace="Textura" line="37" package="Default">
        <name>MSG_TYPE_WARN</name>
        <full_name>MSG_TYPE_WARN</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Textura" line="38" package="Default">
        <name>MSG_TYPE_ERROR</name>
        <full_name>MSG_TYPE_ERROR</full_name>
        <value>5</value>
      </constant>
      <property final="false" static="false" visibility="private" line="43" namespace="Textura" package="Default">
        <name>$path</name>
        <default/>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="path to log file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="51" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="45">
          <description>Constructor</description>
          <long-description/>
          <tag line="45" name="param" description="path to log file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="throws" description="if log file directory does not exist or is unwritable" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="64" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="59">
          <description>Logs a message with severity "debug"</description>
          <long-description/>
          <tag line="59" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="73" package="Default">
        <name>dev</name>
        <full_name>dev</full_name>
        <docblock line="68">
          <description>Logs a message with severity "dev"</description>
          <long-description/>
          <tag line="68" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="82" package="Default">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="77">
          <description>Logs a message with severity "error"</description>
          <long-description/>
          <tag line="77" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="91" package="Default">
        <name>info</name>
        <full_name>info</full_name>
        <docblock line="86">
          <description>Logs a message with severity "info"</description>
          <long-description/>
          <tag line="86" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="102" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="95">
          <description>Logs a message</description>
          <long-description/>
          <tag line="95" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="integer" variable="$severity">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="95" name="throws" description="if logfile cannot be written to" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="102">
          <name>$severity</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="116" package="Default">
        <name>warn</name>
        <full_name>warn</full_name>
        <docblock line="111">
          <description>Logs a message with severity "warn"</description>
          <long-description/>
          <tag line="111" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="127" package="Default">
        <name>getSeverityAsString</name>
        <full_name>getSeverityAsString</full_name>
        <docblock line="120">
          <description>Returns a severity constant as a string.</description>
          <long-description/>
          <tag line="120" name="param" description="" type="integer" variable="$severity">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="120" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="throws" description="if the severity cannot be found." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$severity</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Session.php" hash="7b235666f8524fdf2177c3e2ef5ff05d" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Session</name>
      <full_name>\Textura\Session</full_name>
      <docblock line="29">
        <description>Class that represents a user session</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$RESERVED_INSTANCE_VARS</name>
        <default>array('session_id', 'session_name')</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="properties which the user can read from but not write to" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$SESSION_SAVE_PATH</name>
        <default>null</default>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="path to directory where sessions are saved" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$SESSION_NAME</name>
        <default>null</default>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="session name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="52" namespace="Textura" package="Default">
        <name>$instance_vars</name>
        <default/>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="session variables" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="Textura" package="Default">
        <name>$id</name>
        <default/>
        <docblock line="54">
          <description/>
          <long-description/>
          <tag line="54" name="var" description="session id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="62" namespace="Textura" package="Default">
        <name>$path</name>
        <default/>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="var" description="session save path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="67" namespace="Textura" package="Default">
        <name>$dirty</name>
        <default/>
        <docblock line="64">
          <description/>
          <long-description/>
          <tag line="64" name="var" description="true whenever session has unsaved data, false otherwise" type="\Textura\boolen">
            <type by_reference="false">\Textura\boolen</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="72" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="69">
          <description>Private constructor.</description>
          <long-description>&lt;p&gt;Use Session::init instead.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="107" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="102">
          <description>Initializes a new session.</description>
          <long-description/>
          <tag line="102" name="return" description="" type="\self">
            <type by_reference="false">\self</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="114" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="111">
          <description>Clears all variables from session.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="121" package="Default">
        <name>commit</name>
        <full_name>commit</full_name>
        <docblock line="118">
          <description>Writes current session to disc.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="135" package="Default">
        <name>destroy</name>
        <full_name>destroy</full_name>
        <docblock line="132">
          <description>Destroys session.</description>
          <long-description>&lt;p&gt;Calling this method will give the user a new session cookie on next request.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="148" package="Default">
        <name>getInstanceVars</name>
        <full_name>getInstanceVars</full_name>
        <docblock line="143">
          <description>Returns all session variables.</description>
          <long-description/>
          <tag line="143" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="157" package="Default">
        <name>generateId</name>
        <full_name>generateId</full_name>
        <docblock line="152">
          <description>Returns a unique id to use as a session id.</description>
          <long-description/>
          <tag line="152" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="166" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="161">
          <description>Reads session data from disc.</description>
          <long-description/>
          <tag line="161" name="throws" description="if session cannot be found." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="187" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="182">
          <description>Serializes session to disc.</description>
          <long-description/>
          <tag line="182" name="throws" description="if session file cannot be written." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="212" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="204">
          <description>Magic getter.</description>
          <long-description>&lt;p&gt;If key is 'session_id' the session id is returned. If key is 'session_name'
the session name is returned. For any other keys, checks the currect session data and
returns the current value. If key cannot be found in current session data, returns null.&lt;/p&gt;</long-description>
          <tag line="204" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="225" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="218">
          <description>Magic setter.</description>
          <long-description>&lt;p&gt;Sets a variable in the session.&lt;/p&gt;</long-description>
          <tag line="218" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="218" name="throws" description="if the user tries to set a reserved property." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="225">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Router.php" hash="e21284cd06f278f21c44f45bad423c14" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="192" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Router</name>
      <full_name>\Textura\Router</full_name>
      <docblock line="29">
        <description>Router.</description>
        <long-description>&lt;p&gt;This class is responsible for mapping requests to controllers and actions.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$controller_classes</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="array holding the list of active controllers (controller_class =&gt; path)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$controller_map</name>
        <default>null</default>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="array holding the list of active controllers (path =&gt; controller_class)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$default_actions</name>
        <default>null</default>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="array holding default actions for active controllers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="63" package="Default">
        <name>route</name>
        <full_name>route</full_name>
        <docblock line="49">
          <description>Routes a request and emits a response.</description>
          <long-description>&lt;p&gt;Rules for routing:&lt;/p&gt;

&lt;p&gt;1) If an exact match is found, the specified action is called directly
2) If no exact match is found, the "default" action for the current controller is called
3) If no default action is found and the path differs from /, the "parent" path is called
4) Repeat&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="The request to process" type="\Textura\Request" variable="$request">
            <type by_reference="false">\Textura\Request</type>
          </tag>
          <tag line="49" name="param" description="The response to send" type="\Textura\Response" variable="$response">
            <type by_reference="false">\Textura\Response</type>
          </tag>
          <tag line="49" name="return" description="This method always returns null" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$request</name>
          <default/>
          <type>\Textura\Request</type>
        </argument>
        <argument line="63">
          <name>$response</name>
          <default/>
          <type>\Textura\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="141" package="Default">
        <name>getControllerPath</name>
        <full_name>getControllerPath</full_name>
        <docblock line="134">
          <description>Returns the path for a specific controller class</description>
          <long-description/>
          <tag line="134" name="param" description="" type="\Textura\Textura\Controller" variable="$controller_class">
            <type by_reference="false">\Textura\Textura\Controller</type>
          </tag>
          <tag line="134" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="throws" description="if controller class is not mapped in the current controller map" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$controller_class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="155" package="Default">
        <name>getDefaultAction</name>
        <full_name>getDefaultAction</full_name>
        <docblock line="148">
          <description>Returns the default action for a controller class</description>
          <long-description/>
          <tag line="148" name="param" description="Either class name or a controller object" type="mixed" variable="$obj_or_string">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="148" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="throws" description="If the controller class does not exist" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$obj_or_string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Textura" line="168" package="Default">
        <name>extractParams</name>
        <full_name>extractParams</full_name>
        <docblock line="161">
          <description>Extracts the parameters from a specific path.</description>
          <long-description/>
          <tag line="161" name="param" description="The path to extract parameters from" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="param" description="The current request" type="\Textura\Request" variable="$request">
            <type by_reference="false">\Textura\Request</type>
          </tag>
          <tag line="161" name="return" description="An array with parameters" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="168">
          <name>$request</name>
          <default/>
          <type>\Textura\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Textura" line="179" package="Default">
        <name>getTemplatePath</name>
        <full_name>getTemplatePath</full_name>
        <docblock line="172">
          <description>Returns the template file path for a specific request path/action</description>
          <long-description/>
          <tag line="172" name="param" description="The request path" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="The current action" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="return" description="The path where the template file should be found" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="179">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Textura" line="191" package="Default">
        <name>renderTemplate</name>
        <full_name>renderTemplate</full_name>
        <docblock line="184">
          <description>Renders a HAML template for the specified path</description>
          <long-description/>
          <tag line="184" name="param" description="" type="\Textura\Textura\Controller" variable="$controller">
            <type by_reference="false">\Textura\Textura\Controller</type>
          </tag>
          <tag line="184" name="param" description="" type="string" variable="$template_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="" type="\Textura\Textura\Response" variable="$response">
            <type by_reference="false">\Textura\Textura\Response</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="191">
          <name>$template_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="191">
          <name>$response</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="Textura" line="211" package="Default">
        <name>initializeControllerMap</name>
        <full_name>initializeControllerMap</full_name>
        <docblock line="207">
          <description>This method is responsible for initializing the controller map.</description>
          <long-description>&lt;p&gt;It will also calculate
default actions for all controllers.&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Current.php" hash="92d8e2aaa416d1ce36144fbfa762def0" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Current</name>
      <full_name>\Textura\Current</full_name>
      <docblock line="29">
        <description>This class works as a container for the few globals pieces of data that are needed in Textura</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$action</name>
        <default>null</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="current action" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="42" namespace="Textura" package="Default">
        <name>$application</name>
        <default>null</default>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="current application" type="\Textura\Textura\Textura">
            <type by_reference="false">\Textura\Textura\Textura</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="47" namespace="Textura" package="Default">
        <name>$controller</name>
        <default>null</default>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="current controller" type="\Textura\Textura\Controller">
            <type by_reference="false">\Textura\Textura\Controller</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="52" namespace="Textura" package="Default">
        <name>$request</name>
        <default>null</default>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="current request" type="\Textura\Textura\Request">
            <type by_reference="false">\Textura\Textura\Request</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="57" namespace="Textura" package="Default">
        <name>$response</name>
        <default>null</default>
        <docblock line="54">
          <description/>
          <long-description/>
          <tag line="54" name="var" description="current response" type="\Textura\Textura\Response">
            <type by_reference="false">\Textura\Textura\Response</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="62" namespace="Textura" package="Default">
        <name>$session</name>
        <default>null</default>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="var" description="current session" type="\Textura\Textura\Session">
            <type by_reference="false">\Textura\Textura\Session</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="74" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="64">
          <description>Initializes the Textura\Current object.</description>
          <long-description>&lt;p&gt;The Textura\Current object is a convenient way to
reach any part of Textura from anywhere. It has methods for getting the current application,
the current controller, the current request, the current response and the current session.&lt;/p&gt;</long-description>
          <tag line="64" name="param" description="" type="\Textura\Textura" variable="$application">
            <type by_reference="false">\Textura\Textura</type>
          </tag>
          <tag line="64" name="param" description="" type="\Textura\Request" variable="$request">
            <type by_reference="false">\Textura\Request</type>
          </tag>
          <tag line="64" name="param" description="" type="\Textura\Response" variable="$response">
            <type by_reference="false">\Textura\Response</type>
          </tag>
          <tag line="64" name="throws" description="if already initialized. This should *never* happen." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$application</name>
          <default/>
          <type>\Textura\Textura</type>
        </argument>
        <argument line="74">
          <name>$request</name>
          <default/>
          <type>\Textura\Request</type>
        </argument>
        <argument line="74">
          <name>$response</name>
          <default/>
          <type>\Textura\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="90" package="Default">
        <name>action</name>
        <full_name>action</full_name>
        <docblock line="84">
          <description>Returns the current action</description>
          <long-description/>
          <tag line="84" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="102" package="Default">
        <name>application</name>
        <full_name>application</full_name>
        <docblock line="97">
          <description>Returns the current application</description>
          <long-description/>
          <tag line="97" name="return" description="" type="\Textura\Textura">
            <type by_reference="false">\Textura\Textura</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="112" package="Default">
        <name>controller</name>
        <full_name>controller</full_name>
        <docblock line="106">
          <description>Returns the current controller.</description>
          <long-description/>
          <tag line="106" name="return" description="" type="\Textura\Controller">
            <type by_reference="false">\Textura\Controller</type>
          </tag>
          <tag line="106" name="throws" description="" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="124" package="Default">
        <name>haveController</name>
        <full_name>haveController</full_name>
        <docblock line="119">
          <description>Returns whetehr we have a controller ready or not.</description>
          <long-description/>
          <tag line="119" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="133" package="Default">
        <name>request</name>
        <full_name>request</full_name>
        <docblock line="128">
          <description>Returns the current request</description>
          <long-description/>
          <tag line="128" name="return" description="" type="\Textura\Request">
            <type by_reference="false">\Textura\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="142" package="Default">
        <name>response</name>
        <full_name>response</full_name>
        <docblock line="137">
          <description>Returns the current response</description>
          <long-description/>
          <tag line="137" name="return" description="" type="\Textura\Response">
            <type by_reference="false">\Textura\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="152" package="Default">
        <name>session</name>
        <full_name>session</full_name>
        <docblock line="146">
          <description>Returns the current session</description>
          <long-description/>
          <tag line="146" name="return" description="" type="\Textura\Textura\Session">
            <type by_reference="false">\Textura\Textura\Session</type>
          </tag>
          <tag line="146" name="throws" description="if sessions are disabled by the controller." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="166" package="Default">
        <name>setActiveControllerAndAction</name>
        <full_name>setActiveControllerAndAction</full_name>
        <docblock line="159">
          <description>Sets the active controller and action.</description>
          <long-description>&lt;p&gt;This method will also check if the controller needs a
session and initialize one if needed.&lt;/p&gt;</long-description>
          <tag line="159" name="param" description="" type="\Textura\Controller" variable="$controller">
            <type by_reference="false">\Textura\Controller</type>
          </tag>
          <tag line="159" name="param" description="" type="\Textura\type" variable="$action">
            <type by_reference="false">\Textura\type</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$controller</name>
          <default/>
          <type>\Textura\Controller</type>
        </argument>
        <argument line="166">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="180" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="177">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="185" package="Default">
        <name>clearGlobals</name>
        <full_name>clearGlobals</full_name>
        <docblock line="182">
          <description>Clears all globals since they are *EVIL*.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="198" package="Default">
        <name>initSession</name>
        <full_name>initSession</full_name>
        <docblock line="195">
          <description>Initializes a new śession.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Model.php" hash="fd7107fce67e11de2258166f8e1c48d1" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description></long-description>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="true" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Model</name>
      <full_name>\Textura\Model</full_name>
      <docblock line="29">
        <description>Abstract class representing a database model.</description>
        <long-description></long-description>
      </docblock>
      <constant namespace="Textura" line="36" package="Default">
        <name>PROPERTY_TYPE_INTEGER</name>
        <full_name>PROPERTY_TYPE_INTEGER</full_name>
        <value>1</value>
      </constant>
      <constant namespace="Textura" line="37" package="Default">
        <name>PROPERTY_TYPE_JSON</name>
        <full_name>PROPERTY_TYPE_JSON</full_name>
        <value>2</value>
      </constant>
      <constant namespace="Textura" line="38" package="Default">
        <name>PROPERTY_TYPE_FLOAT</name>
        <full_name>PROPERTY_TYPE_FLOAT</full_name>
        <value>3</value>
      </constant>
      <constant namespace="Textura" line="39" package="Default">
        <name>PROPERTY_TYPE_MODEL</name>
        <full_name>PROPERTY_TYPE_MODEL</full_name>
        <value>4</value>
      </constant>
      <constant namespace="Textura" line="40" package="Default">
        <name>PROPERTY_TYPE_SERIALIZED</name>
        <full_name>PROPERTY_TYPE_SERIALIZED</full_name>
        <value>5</value>
      </constant>
      <constant namespace="Textura" line="41" package="Default">
        <name>PROPERTY_TYPE_STRING</name>
        <full_name>PROPERTY_TYPE_STRING</full_name>
        <value>6</value>
      </constant>
      <property final="false" static="false" visibility="private" line="46" namespace="Textura" package="Default">
        <name>$instance_properties</name>
        <default></default>
        <docblock line="43">
          <description></description>
          <long-description></long-description>
          <tag line="43" name="var" description="Properties defined by database schema." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="51" namespace="Textura" package="Default">
        <name>$table</name>
        <default>null</default>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag line="48" name="var" description="database schema (table) name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="57" namespace="Textura" package="Default">
        <name>$properties</name>
        <default>array()</default>
        <docblock line="53">
          <description></description>
          <long-description></long-description>
          <tag line="53" name="var" description="Properties defined outside of database schema. Override this property to provide custom handling of values for specific properties." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="66" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="59">
          <description>Loads a single model instance by primary key.</description>
          <long-description>&lt;p&gt;If no model instance can be found,
null is returned.&lt;/p&gt;</long-description>
          <tag line="59" name="param" description="" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="59" name="return" description="" type="\Textura\Model">
            <type by_reference="false">\Textura\Model</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="75" package="Default">
        <name>loadAll</name>
        <full_name>loadAll</full_name>
        <docblock line="70">
          <description>Loads all  available instances of a particular model</description>
          <long-description></long-description>
          <tag line="70" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="87" package="Default">
        <name>loadBy</name>
        <full_name>loadBy</full_name>
        <docblock line="79">
          <description>Loads model instances where $conditions are true.</description>
          <long-description>&lt;p&gt;If no model instances matching the
conditions can be found, an empty array is returned.&lt;/p&gt;</long-description>
          <tag line="79" name="param" description="" type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="return" description="An array with model instances" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$conditions</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="94" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="91">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="107" package="Default">
        <name>properties</name>
        <full_name>properties</full_name>
        <docblock line="102">
          <description>Returns an array of available properties.</description>
          <long-description></long-description>
          <tag line="102" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="115" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="111">
          <description>Deletes the current model object from the database.</description>
          <long-description>&lt;p&gt;Calling this method will &lt;em&gt;not&lt;/em&gt; destroy the
model object itself.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="124" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="119">
          <description>Saves the current model object to the underlying data store.</description>
          <long-description></long-description>
          <tag line="119" name="return" description="true if the save operation succeeds, false otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="135" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="128">
          <description>Magic property getter</description>
          <long-description></long-description>
          <tag line="128" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="128" name="throws" description="if the property does not exist" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="147" package="Default">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="140">
          <description>Magic property setter</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="140" name="throws" description="if the property does not exist" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="147">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Request.php" hash="e4132af1678baf3317f257f46fdecd6d" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="33" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\Textura\Request</full_name>
      <docblock line="29">
        <description>Request object.</description>
        <long-description>&lt;p&gt;Losely based on Rack::Request (from Ruby)&lt;/p&gt;</long-description>
        <tag line="29" name="see" description="\Textura\http://rack.rubyforge.org/doc/classes/Rack/Request.html" refers="\Textura\http://rack.rubyforge.org/doc/classes/Rack/Request.html"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="38" namespace="Textura" package="Default">
        <name>$cookies</name>
        <default/>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="cookies sent with request" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="Textura" package="Default">
        <name>$files</name>
        <default/>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="files uploaded with current request" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="Textura" package="Default">
        <name>$get_params</name>
        <default/>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="GET parameters sent with current request" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Textura" package="Default">
        <name>$post_params</name>
        <default/>
        <docblock line="50">
          <description/>
          <long-description/>
          <tag line="50" name="var" description="POST parameters sent with current request" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="Textura" package="Default">
        <name>$server_params</name>
        <default/>
        <docblock line="55">
          <description/>
          <long-description/>
          <tag line="55" name="var" description="parameters automatically created by PHP" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="Textura" package="Default">
        <name>$validation_errors</name>
        <default/>
        <docblock line="60">
          <description/>
          <long-description/>
          <tag line="60" name="var" description="validation errors (if any). There can only be validation errors in any of the isValidXXX are used." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="69" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description>constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="83" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="78">
          <description>Initializes a new instance of the current class</description>
          <long-description/>
          <tag line="78" name="return" description="" type="\Textura\Textura\Request">
            <type by_reference="false">\Textura\Textura\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="93" package="Default">
        <name>getCookie</name>
        <full_name>getCookie</full_name>
        <docblock line="87">
          <description>Returns the value of a specific cookie or null if the cookie is not set.</description>
          <long-description/>
          <tag line="87" name="param" description="" type="string" variable="$cookie_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$cookie_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="102" package="Default">
        <name>getValidationErrors</name>
        <full_name>getValidationErrors</full_name>
        <docblock line="97">
          <description>Returns the list of validation errors (if any) for the current request</description>
          <long-description/>
          <tag line="97" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="111" package="Default">
        <name>isGet</name>
        <full_name>isGet</full_name>
        <docblock line="106">
          <description>Returns whether the current request is a GET request</description>
          <long-description/>
          <tag line="106" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="120" package="Default">
        <name>isDelete</name>
        <full_name>isDelete</full_name>
        <docblock line="115">
          <description>Returns whether the current request is a DELETE request</description>
          <long-description/>
          <tag line="115" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="129" package="Default">
        <name>isHead</name>
        <full_name>isHead</full_name>
        <docblock line="124">
          <description>Returns whether the current request is a HEAD request</description>
          <long-description/>
          <tag line="124" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="138" package="Default">
        <name>isPost</name>
        <full_name>isPost</full_name>
        <docblock line="133">
          <description>Returns whether the current request is a POST request</description>
          <long-description/>
          <tag line="133" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="147" package="Default">
        <name>isPut</name>
        <full_name>isPut</full_name>
        <docblock line="142">
          <description>Returns whether the current request is a PUT request</description>
          <long-description/>
          <tag line="142" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="156" package="Default">
        <name>isTrace</name>
        <full_name>isTrace</full_name>
        <docblock line="151">
          <description>Returns whether the current request is a PUT request</description>
          <long-description/>
          <tag line="151" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="166" package="Default">
        <name>isValidGet</name>
        <full_name>isValidGet</full_name>
        <docblock line="160">
          <description>Returns whether the current request is considered a "valid" GET request or not.</description>
          <long-description/>
          <tag line="160" name="param" description="" type="array" variable="$required_params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="160" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$required_params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="176" package="Default">
        <name>isValidPost</name>
        <full_name>isValidPost</full_name>
        <docblock line="170">
          <description>Returns whether the current request is considered a "valid" POST request or not.</description>
          <long-description/>
          <tag line="170" name="param" description="" type="array" variable="$required_params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="170" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$required_params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="189" package="Default">
        <name>isValidXhr</name>
        <full_name>isValidXhr</full_name>
        <docblock line="180">
          <description>Returns whether the current request is considered a "valid" XHR request or not.</description>
          <long-description/>
          <tag line="180" name="param" description="" type="array" variable="$required_params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="180" name="param" description="If this parameter is set, only the specified request method will&#10;                              be considered valid. If it is not set, any request method will be&#10;                              considered valid." type="string" variable="$request_method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="180" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$required_params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="189">
          <name>$request_method</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="207" package="Default">
        <name>isXhr</name>
        <full_name>isXhr</full_name>
        <docblock line="202">
          <description>Returns whether the current request is an AJAX request</description>
          <long-description/>
          <tag line="202" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="219" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="213">
          <description>Magic getter.</description>
          <long-description>&lt;p&gt;Allows for some shortcuts in the code.&lt;/p&gt;</long-description>
          <tag line="213" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="283" package="Default">
        <name>isValid</name>
        <full_name>isValid</full_name>
        <docblock line="275">
          <description>Returns whether the current request is considered "valid" or not.</description>
          <long-description>&lt;p&gt;A request is considered valid
if it uses the correct request type and and all required parameters are present.&lt;/p&gt;</long-description>
          <tag line="275" name="param" description="" type="string" variable="$request_method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="275" name="param" description="" type="array" variable="$required_params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$request_method</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$required_params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Textura.php" hash="e93800005387c8743c67d4e661d53f21" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="29" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="33" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="98" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="112" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="221" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="38" package="Default">
      <extends/>
      <implements>\Textura\Singleton</implements>
      <name>Textura</name>
      <full_name>\Textura\Textura</full_name>
      <docblock line="35">
        <description>This class represents the Textura "application"</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="43" namespace="Textura" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="references the one and only instance of this class" type="\Textura\Textura\Textura">
            <type by_reference="false">\Textura\Textura\Textura</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="Textura" package="Default">
        <name>$configuration</name>
        <default/>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="current configuration" type="\Textura\Textura\Configuration">
            <type by_reference="false">\Textura\Textura\Configuration</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="Textura" package="Default">
        <name>$plugins</name>
        <default/>
        <docblock line="50">
          <description/>
          <long-description/>
          <tag line="50" name="var" description="currently registered plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Textura" line="58" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="69" package="Default">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="63">
          <description>Loads classes from Textura core and Textura plugins automatically.</description>
          <long-description/>
          <tag line="63" name="param" description="class to load" type="string" variable="$class_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$class_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="123" package="Default">
        <name>getInstance</name>
        <full_name>getInstance</full_name>
        <docblock line="118">
          <description>Returns the (single) instance of the Textura class.</description>
          <long-description/>
          <tag line="118" name="return" description="" type="\Textura\Textura">
            <type by_reference="false">\Textura\Textura</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="136" package="Default">
        <name>getConfigurationOption</name>
        <full_name>getConfigurationOption</full_name>
        <docblock line="130">
          <description>Returns a specified configuration option.</description>
          <long-description>&lt;p&gt;If the option does not exist, null is returned.&lt;/p&gt;</long-description>
          <tag line="130" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="146" package="Default">
        <name>setConfigurationOption</name>
        <full_name>setConfigurationOption</full_name>
        <docblock line="140">
          <description>Sets a specified configuration option.</description>
          <long-description>&lt;p&gt;If the option does not exist it will be created.&lt;/p&gt;</long-description>
          <tag line="140" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="146">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="155" package="Default">
        <name>getPluginPaths</name>
        <full_name>getPluginPaths</full_name>
        <docblock line="150">
          <description>Return all paths registered by plugins.</description>
          <long-description/>
          <tag line="150" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="166" package="Default">
        <name>initPlugins</name>
        <full_name>initPlugins</full_name>
        <docblock line="163">
          <description>Loads all plugins requested by configuration file.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Textura" line="195" package="Default">
        <name>registerPlugin</name>
        <full_name>registerPlugin</full_name>
        <docblock line="181">
          <description>Register a plugin to be used by the framework.</description>
          <long-description/>
          <tag line="181" name="param" description="Name of plugin to load." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="custom directory where plugin can be found. If null, uses&#10;  TEXTURA_PLUGIN_DIR/$name." type="string" variable="$plugin_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="custom file name where plugin can be found. If null, uses&#10;  plugin_dir/$name.php." type="string" variable="$plugin_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="custom class name that should be loaded. If null, uses&#10;  &quot;{$name}Plugin&quot;." type="string" variable="$plugin_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="param" description="custom namespace that should be used to initialize the plugin&#10;  class. If null, the &quot;Textura&quot; namespace is assumed." type="string" variable="$plugin_namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="181" name="throws" description="if the plugin cannot be loaded for some reason." type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="196">
          <name>$plugin_dir</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="196">
          <name>$plugin_file</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="196">
          <name>$plugin_class</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="196">
          <name>$plugin_namespace</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Configuration.php" hash="d81da796b8f675113e7154271b03106c" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="59" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>Configuration</name>
      <full_name>\Textura\Configuration</full_name>
      <docblock line="29">
        <description>This class represents the configuration of a Textura application</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$configuration</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="current configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Constructor</description>
          <long-description/>
          <tag line="39" name="param" description="If a soecific configuration file should be loaded" type="string" variable="$config_file_path">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$config_file_path</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="57" package="Default">
        <name>loadConfig</name>
        <full_name>loadConfig</full_name>
        <docblock line="51">
          <description>Loads a configuration file</description>
          <long-description/>
          <tag line="51" name="param" description="The configuration file to load" type="string" variable="$config_file_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="throws" description="If the configuration file cannot be found" type="\LogicException">
            <type by_reference="false">\LogicException</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$config_file_path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="76" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="67">
          <description>Returns a specific configuration option.</description>
          <long-description>&lt;p&gt;Keys support namespaces by using dot notation, so both
mykey and mynamespace.mykey are valid keys.&lt;/p&gt;

&lt;p&gt;If a key cannot be found, null is returned.&lt;/p&gt;</long-description>
          <tag line="67" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Textura" line="93" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="86">
          <description>Sets a specific configuration option.</description>
          <long-description>&lt;p&gt;Keys support namespaces by using dot notation, so both
mykey and mynamespace.mykey are valid keys.&lt;/p&gt;</long-description>
          <tag line="86" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="93">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/Debugger.php" hash="c235143714d6d23d429b253df644d2ac" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="33" package="Default">
      <extends/>
      <name>Debugger</name>
      <full_name>\Textura\Debugger</full_name>
      <docblock line="29">
        <description>Class for debugging requests.</description>
        <long-description>&lt;p&gt;This class will be loaded automatically by Textura whenever
debugging is activated in the config file.&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="41" package="Default">
        <name>debug_request</name>
        <full_name>debug_request</full_name>
        <docblock line="35">
          <description>Adds debugging information for the current requst to the current response</description>
          <long-description/>
          <tag line="35" name="param" description="" type="\Textura\Request" variable="$request">
            <type by_reference="false">\Textura\Request</type>
          </tag>
          <tag line="35" name="param" description="" type="\Textura\Response" variable="$response">
            <type by_reference="false">\Textura\Response</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$request</name>
          <default/>
          <type>\Textura\Request</type>
        </argument>
        <argument line="41">
          <name>$response</name>
          <default/>
          <type>\Textura\Response</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="src/textura/core/classes/PathBuilder.php" hash="bc583d7a19100a5443d0d940918a8012" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <class final="false" abstract="false" namespace="Textura" line="32" package="Default">
      <extends/>
      <name>PathBuilder</name>
      <full_name>\Textura\PathBuilder</full_name>
      <docblock line="29">
        <description>Class for handling paths in a uniform way</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="private" line="37" namespace="Textura" package="Default">
        <name>$textura_base_url</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="keeps track of Textura's &quot;base&quot; url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="44" package="Default">
        <name>buildPath</name>
        <full_name>buildPath</full_name>
        <docblock line="39">
          <description>Builds a path in the file system from parameters sent to the method.</description>
          <long-description/>
          <tag line="39" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="58" package="Default">
        <name>buildRoute</name>
        <full_name>buildRoute</full_name>
        <docblock line="50">
          <description>Return the route to a particular controller/action/parameter list.</description>
          <long-description/>
          <tag line="50" name="param" description="" type="string" variable="$controller_class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="" type="string" variable="$action">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$controller_class</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$action</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="58">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="76" package="Default">
        <name>buildStaticRoute</name>
        <full_name>buildStaticRoute</full_name>
        <docblock line="70">
          <description>Builds a route to static content within the application.</description>
          <long-description/>
          <tag line="70" name="param" description="" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="70" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="90" package="Default">
        <name>ensureTrailingSlash</name>
        <full_name>ensureTrailingSlash</full_name>
        <docblock line="83">
          <description>Takes a string and makes sure it ends in a specific char.</description>
          <long-description>&lt;p&gt;This is useful when building paths.&lt;/p&gt;</long-description>
          <tag line="83" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="" type="string" variable="$slash_char">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$slash_char</name>
          <default>'/'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Textura" line="99" package="Default">
        <name>getTexturaBaseURL</name>
        <full_name>getTexturaBaseURL</full_name>
        <docblock line="94">
          <description>Returns Texturas "base" url, ie the root of all requests passed through the framework</description>
          <long-description/>
          <tag line="94" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="router.php" hash="8c67f237f68a714c03c85730ad37165a" package="Textura">
    <docblock line="21">
      <description>Textura</description>
      <long-description/>
      <tag line="21" name="package" description="Textura"/>
    </docblock>
    <include line="28" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="50" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="35" package="Textura">
      <name>TEXTURA_ROOT_DIR</name>
      <full_name>\TEXTURA_ROOT_DIR</full_name>
      <value>dirname(__FILE__)</value>
    </constant>
    <constant namespace="global" line="36" package="Textura">
      <name>TEXTURA_SITE_DIR</name>
      <full_name>\TEXTURA_SITE_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_ROOT_DIR, 'site')</value>
    </constant>
    <constant namespace="global" line="37" package="Textura">
      <name>TEXTURA_CONTROLLER_DIR</name>
      <full_name>\TEXTURA_CONTROLLER_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_SITE_DIR, 'controllers')</value>
    </constant>
    <constant namespace="global" line="38" package="Textura">
      <name>TEXTURA_MODEL_DIR</name>
      <full_name>\TEXTURA_MODEL_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_SITE_DIR, 'models')</value>
    </constant>
    <constant namespace="global" line="39" package="Textura">
      <name>TEXTURA_SRC_DIR</name>
      <full_name>\TEXTURA_SRC_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_ROOT_DIR, 'src')</value>
    </constant>
    <constant namespace="global" line="40" package="Textura">
      <name>TEXTURA_CORE_DIR</name>
      <full_name>\TEXTURA_CORE_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_ROOT_DIR, 'src', 'textura', 'core')</value>
    </constant>
    <constant namespace="global" line="43" package="Textura">
      <name>TEXTURA_PLUGIN_DIR</name>
      <full_name>\TEXTURA_PLUGIN_DIR</full_name>
      <value>\Textura\PathBuilder::buildPath(TEXTURA_ROOT_DIR, 'src', 'textura', 'plugins')</value>
    </constant>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Textura" full_name="Textura">
    <package name="Model" full_name="Textura\Model"/>
  </package>
  <namespace name="Textura" full_name="Textura">
    <namespace name="Model" full_name="Textura\Model"/>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="2">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
